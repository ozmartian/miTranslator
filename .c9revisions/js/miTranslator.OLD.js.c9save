{"ts":1372758506861,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var handleOpenURL = function(url) { setTimeout(function() { miTrans.translate(url.substring(10)); }, 0); };\n\nvar miTrans = {\n\n    service: {\n\n        baidu: {\n            uri: 'http://openapi.baidu.com/public/2.0/bmt/translate?client_id=tdtoPMy8Y2GG0GPYkrWfhSr6&q=',\n            query: '&from={from}&to={to}',\n            result: 'trans_result[0].dst',\n            datatype: 'jsonp',\n            type: 'GET',\n            lang: { chinese: 'zh', english: 'en' },\n            enabled: true\n        },\n\n        bing: {\n            uri: 'https://api.microsofttranslator.com/v2/Ajax.svc/Translate?appid=66A8CA727C20371BED579D93DC7E476479EAC832&oncomplete=miTrans.callback&text=',\n            query: '&from={from}&to={to}',\n            result: '',\n            datatype: 'jsonp',\n            type: 'GET',\n            lang: { chinese: 'zh-CHS', english: 'en' },\n            enabled: true\n        },\n\n        transcloud: {\n            uri: 'http://translation-cloud.com/wp-content/themes/translationcloud/ajax/free_translator.php?text=',\n            query: '&src={from}&dst={to}',\n            result: '',\n            datatype: 'text',\n            type: 'GET',\n            lang: { chinese: 'zh-CHS', english: 'en' },\n            enabled: true\n        },\n\n        youdao: {\n            uri: 'http://fanyi.youdao.com/openapi.do?keyfrom=friskfly&key=1410212834&type=data&doctype=jsonp&version=1.1&q=',\n            query: '',\n            result: 'translation[0]',\n            datatype: 'jsonp',\n            type: 'GET',\n            lang: {},\n            enabled: true\n        }\n\n    },\n\n    isphonegap: false,\n    clipdata: '',\n    timer: '',\n    data: '',\n    response: '',\n    from: '',\n    to: '',\n\n    provider: 'baidu',\n\n    regex: new RegExp('[^\\x00-\\x80]+'),\n\n    isJSON: function(val) {\n        try {\n            JSON.parse(val);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    },\n\n    callback: function(response) {\n        miTrans.data = response;\n        if (document.location.hash === \"#debug\") { console.log('response: ' + data); }\n        if (miTrans.service[miTrans.provider].result.length > 0) {\n            miTrans.response = eval('miTrans.data.' + miTrans.service[miTrans.provider].result);\n        } else {\n            miTrans.response = miTrans.data;\n        }\n        $('#translatedText .iscroll-content').text(miTrans.response);\n\n        /* BEGIN: REVERSE TRANSLATION */\n        var reverseTrans = '<h3>Reverse Translation</h3>';\n        /*    END: REVERSE TRANSLATION */\n\n        $('#translatedText').iscrollview('refresh');\n        miTrans.loader(false);\n        miTrans.setclip(miTrans.response);\n    },\n\n    translate: function(toTrans) {\n        if (toTrans && typeof(toTrans) == 'string' && toTrans.length > 0) { $('#translateText').val(unescape(toTrans)); }\n        var text = $('#translateText').val();\n        if (text.length > 0) {\n            miTrans.loader(true);\n            if (miTrans.service[miTrans.provider].query.length > 0) {\n                if (miTrans.regex.test(text)) {\n                    miTrans.from = miTrans.service[miTrans.provider].lang.chinese;\n                    miTrans.to = miTrans.service[miTrans.provider].lang.english;\n                } else {\n                    miTrans.from = miTrans.service[miTrans.provider].lang.english;\n                    miTrans.to = miTrans.service[miTrans.provider].lang.chinese;\n                }\n                var qsVal = (miTrans.service[miTrans.provider].query).replace(/{from}/gi, miTrans.from).replace(/{to}/gi, miTrans.to);\n                var fullURI = miTrans.service[miTrans.provider].uri + encodeURIComponent(text) + qsVal;\n            } else {\n                var fullURI = miTrans.service[miTrans.provider].uri + encodeURIComponent(text);\n            }\n            var dataType = miTrans.service[miTrans.provider].datatype;\n            $.ajax({\n                url: fullURI,\n                dataType: dataType,\n                cache: false,\n                async: true,\n                jsonpCallback: 'miTrans.callback',\n                success: function(data) {\n                    miTrans.callback(data);\n                },\n                failure: function(ex) {\n                    miTrans.loader(false);\n                    console.error('translate() ERROR: ' + ex);\n                }\n            });\n        }\n        return false;\n    },\n\n    loadscript: function(script) {\n        if ($(\"script[src$='\" + script + \"']\").length == 0) {          \n            var tag = document.createElement(\"script\");\n            tag.setAttribute('src', script);            \n            $(\"head\")[0].appendChild(tag);\n        }\n        return true;\n    },\n\n    select: function(e, elem) {\n        e.preventDefault();\n        if ($(elem).val().length > 0) {\n            elem.selectionStart = 0;\n            elem.selectionEnd = elem.value.length;\n        }\n        return false;\n    },\n\n    clear: function() {\n        $('#translateText').val('');\n        $('#translatedText .iscroll-content').empty();\n    },\n\n    setprovider: function(e, p) {\n        e.preventDefault();\n        if (p) {\n            miTrans.provider = $(p).attr('rel');\n            $('#provider_image_' + miTrans.provider).attr('src', 'img/providers/' + miTrans.provider + '.png');\n        }\n        return false;\n    },\n\n    notify: function(msg, elem, autohide) {\n        var autohide = (typeof (autohide) == 'undefined') ? true : false;\n        if (typeof (msg) == 'string') {\n            var elem = ((elem == null || typeof (elem) == 'undefined') && $('#translateText').text().length > 0) ? $(elem) : 'window';\n            $('#message').html(msg).popup('open', { transition: 'fade', positionTo: elem });\n            if (autohide) { setTimeout(function() { $('#message').popup('close', { transition: 'fade' }); }, 3000); }\n        }\n    },\n\n    providers: function() {\n        $('#navbar').append('<ul id=\"providers\" data-corners=\"true\"></ul>');\n        $.each(miTrans.service, function(provider) {\n            if (miTrans.service[provider].enabled) {\n                $('#providers').append('<li><a rel=\"' + provider.toLowerCase() + '\" class=\"provider\" data-theme=\"a\"><div id=\"provider_' + provider.toLowerCase() + '\"></div></a></li>');\n            }\n        });\n        $('#navbar').navbar();\n        $('#providers a[rel=' + miTrans.provider + ']').addClass('ui-btn-active');\n    },\n\n    events: function() {\n        /* var uriText = $.url().param('text');\n        if (typeof(uriText) == 'string' && uriText.length > 0) {\n            miTrans.translate(uriText);\n        } */\n        $('#translateText')\n            .on('blur', function(e) { $.mobile.silentScroll(0); })\n            .on('change', function(e) { miTrans.translate(); })\n            .on('keydown', function(e) {\n                clearTimeout(miTrans.timer);\n                if ($(this).val().trim().length == 0) { $(this).val(''); }\n            })\n            .on('keyup', function(e) {\n                clearTimeout(miTrans.timer);\n                if (e.keyCode == 13) { miTrans.translate(); }\n                else { miTrans.timer = setTimeout(function() { miTrans.translate(); }, 500); }\n            })\n            .on('click', function(e) { miTrans.select(e, this); });\n\n        $('#footer a.provider').on('touchstart', function(e) {\n            miTrans.setprovider(e, this);\n            miTrans.translate();\n        });\n    },\n\n    getclip: function() {\n        //if (miTrans.isphonegap) {\n        try {\n            cordova.exec(function(data){\n                if ($.trim(data).length > 0) {\n                    miTrans.clipdata = $.trim(data);\n                    miTrans.translate(miTrans.clipdata);\n                }\n            }, function(){}, 'ClipboardPlugin', 'getText', []);\n        } catch(ex) {}\n        //}\n    },\n\n    setclip: function(data) {\n        //if (miTrans.isphonegap) {\n        try {\n            if ($.trim(data).length > 0) {\n                cordova.exec(function(){}, function(){}, 'ClipboardPlugin', 'setText', [data]);\n            }\n        } catch(ex) {}\n        //}\n    },\n\n    loader: function(on)  {\n        if (on) { $('.loader').fadeIn('fast'); }\n        else { $('.loader').fadeOut('slow'); }\n    },\n    \n    defaults: function() {\n        $.support.cors = true;\n        $.extend($.mobile, { allowCrossDomainPages: true });\n    },\n\n    init: function() {\n        miTrans.defaults();\n        miTrans.providers();\n        miTrans.events();\n        $('#page').fadeIn('slow');\n        $('#translateText').width($('#content').width()+6);\n        $('#content').height($('#content').height()-95);\n        setTimeout(function(){ miTrans.getclip(); }, 0);\n        //$('#sitefooter').remove();\n    }\n\n};\n\n$(document)\n    .on('touchmove', function(e) { e.preventDefault(); })\n    .on('pageinit', function(e) { miTrans.init(); });"]],"start1":0,"start2":0,"length1":0,"length2":8807}]],"length":8807}
{"contributors":[],"silentsave":false,"ts":1372758508510,"patch":[[{"diffs":[[0," true\n        },"],[1,"\n        \n        systran: {\n            uri: 'http://svstxt.systransoft.com/?gui=vgadget&service=translate&loca=ZH',\n            query: '&lp={from}_{to}',\n            result: '',\n            datatype: 'text',\n            type: 'POST',\n            lang: { chinese: 'zh', english: 'en' }\n        },"],[0,"\n\n        transc"]],"start1":873,"start2":873,"length1":32,"length2":329}]],"length":9104,"saved":false}
{"ts":1372758518641,"patch":[[{"diffs":[[0,": 'en' }"],[1,",\n            enabled: true"],[0,"\n       "]],"start1":1167,"start2":1167,"length1":16,"length2":43}]],"length":9131,"saved":false}
{"ts":1372761608252,"patch":[[{"diffs":[[0,"\n       "],[-1," /*"],[0," var uri"]],"start1":6722,"start2":6722,"length1":19,"length2":16},{"diffs":[[0,"       }"],[-1," */"],[0,"\n       "]],"start1":6874,"start2":6874,"length1":19,"length2":16}]],"length":9125,"saved":false}
